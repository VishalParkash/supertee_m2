<h1>Set Design Area for the product customisation</h1>
<div>
    <?php //echo "<pre>"; print_r($block->getCurrentProduct());?>

    <?php //echo "<pre>"; print_r($block->getCurrentProduct());die;
    if(!empty($block->getCurrentProduct()['id'])){
        $objectmanager = \Magento\Framework\App\ObjectManager::getInstance();
        $product_id = $block->getCurrentProduct()['id']; //Replace with your product ID
        $productimages = array();
        $product = $objectmanager ->create('Magento\Catalog\Model\Product')->load($product_id);
        $productimages = $product->getMediaGalleryImages();

        foreach($productimages as $productimage)
        { ?>
    
    
        
         
         <img src ="<?php echo $productimage['url']; ?>" id="currentProductId" style="display: none">
        <?php }
    }
    ?>

    <!-- <img src ="http://127.0.0.1/supertee/pub/media/BlankProduct/forDesign.png" id="currentProductId" style="display: none"> -->
    <form data-form-part="product_form" method="post" action="">
    	<input  data-form-part="product_form" type="hidden" name="canvasHeight" id="canvasHeight" value="">
    	<input  data-form-part="product_form" type="hidden" name="canvasWidth" id="canvasWidth" value="">
    	<input  data-form-part="product_form" type="hidden" name="canvasXCdnt" id="canvasXCdnt" value="">
    	<input  data-form-part="product_form" type="hidden" name="canvasYCdnt" id="canvasYCdnt" value="">
    </form>
</div>
<p>Drag the mouse to create an area to set for the logo and tagline.</p>

<canvas id="canvas" width="500" height="500"></canvas>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/1.7.11/fabric.min.js"></script>
<script type="text/javascript">
	// var img = document.getElementById('currentProductId'); 

        rect = new fabric.Rect({
    left: 40,
    top: 40,
    width: 50,
    height: 50,      
    fill: 'transparent',
    stroke: 'green',
    strokeWidth: 5,
              });  
  canvas.add(rect);
//or however you get a handle to the IMG
// var width = img.naturalWidth;
// var height = img.naturalHeight;
// var canvas = document.getElementById('canvas');
// var ctx = canvas.getContext('2d');
// var rect = {};
// var drag = false;
// var imageObj = null;


// // var canvas = document.getElementById("canvas");
// // // var canvas2 = document.getElementById("canvas2");

// // var ctx = canvas.getContext("2d");
// // // var ctx2 = canvas2.getContext("2d");

// // var img = new Image();
// // var rect = {};
// // var scale = 0;
// // var scale2 = 0;
// // var x = 0;
// // var y = 0;
// // var x2 = 0;
// // var y2 = 0;
// // var drag = false;


// // img.onload = function () {
// // 	//Setting dpi for canvas1
// // 	var dpi = window.devicePixelRatio || 1;
// // 	canvas.setAttribute('width', canvas.clientWidth * dpi);
// // 	canvas.setAttribute('height', canvas.clientHeight * dpi);
	
// // 	//Setting dpi for canvas2
// // 	var dpi = window.devicePixelRatio || 1;
// // 	// canvas2.setAttribute('width', canvas2.clientWidth * dpi);
// // 	// canvas2.setAttribute('height', canvas2.clientHeight * dpi);
				
	
// // 	ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);
// // 	ctx.save();
	
// // 	// ctx2.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);
// // 	// ctx2.save();
	
// // 	//fitting image to canvas fill
// // 	scale = Math.max(canvas.clientWidth / img.width, canvas.clientHeight / img.height); //canvas1 scale
// // 	// scale2 = Math.max(canvas2.clientWidth / img.width, canvas2.clientHeight / img.height); //canvas2 scale

// //     x = (canvas.clientWidth / 2) - (img.width / 2) * scale; //canvas1 x
// //     y = (canvas.clientHeight / 2) - (img.height / 2) * scale; //canvas1 y

// // 	// x2 = (canvas2.clientWidth / 2) - (img.width / 2) * scale2; //canvas2 x
// //  //    y2 = (canvas2.clientHeight / 2) - (img.height / 2) * scale2; //canvas2 y
	
// //     ctx.drawImage(img, x, y, img.width * scale, img.height * scale);
// // 	// ctx2.drawImage(img, x2, y2, img.width * scale2, img.height * scale2);
	
// //     canvas.addEventListener('mousedown', mouseDown, false);
// //     canvas.addEventListener('mouseup', mouseUp, false);
// //     canvas.addEventListener('mousemove', mouseMove, false);
// //     console.log(scale)
// //     // console.log(scale2)
// // }
// // img.crossOrigin = "Anonymous";
// // img.src = 'http://127.0.0.1/supertee/pub/media/BlankProduct/forDesign.png';

// // function mouseDown(e) {
// //     rect.startX = e.clientX - this.offsetLeft;
// //     rect.startY = e.clientY - this.offsetTop;
// //     drag = true;
// // }

// // function mouseUp() { 
// // 	drag = false; 
// // 	console.log(rect);
// // }

// // function mouseMove(e) {
// //   //   if (drag) {
// //   //       ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);
// //   //       ctx.save();
// //   //       ctx.drawImage(img, x, y, img.width * scale, img.height * scale);
// //   //       rect.w = (e.clientX - this.offsetLeft) - rect.startX;
// //   //       rect.h = (e.clientY - this.offsetTop) - rect.startY;
// // 		// // ctx.lineWidth  = 2;
// //   //       ctx.strokeStyle = 'red';
// //   //       ctx.strokeRect(rect.startX, rect.startY, rect.w, rect.h);
// //   //   }

// //   if (drag) {
// //         ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);
// //         ctx.drawImage(img, x, y, img.width * scale, img.height * scale);
// //         rect.w = (e.clientX - this.offsetLeft) - rect.startX;
// //         rect.h = (e.clientY - this.offsetTop) - rect.startY;
// //         ctx.strokeStyle = 'red';
// //         ctx.strokeRect(rect.startX, rect.startY, rect.w, rect.h);
// //     }
// // }



// // // function sendimg()
// // // {
// // // 	if(rect.startX === undefined)
// // // 	{
// // // 		alert("draw any rectangle first on canvas1");
// // // 		return false;
// // // 	}
// // // 	// ctx2.lineWidth = 2;
// // // 	// ctx2.strokeStyle = "yellow";
// // // 	//Following code is not drawing rectangle on correct position
// // // 	// ctx2.strokeRect( ((rect.startX - x )/scale) * scale2 + x2, 
// // //  //                   ((rect.startY - y )/scale) * scale2 + y2, 
// // //  //                   (rect.w/scale) * (scale2), 
// // //  //                   (rect.h/scale) * (scale2));
  
// // // }
// // ///////ok

// // // var canvas = document.getElementById("canvas1");
// // // var canvas2 = document.getElementById("canvas2");

// // // var ctx = canvas.getContext("2d");
// // // var ctx2 = canvas2.getContext("2d");

// // // var img = new Image();
// // // var rect = {};
// // // var scale = 0;
// // // var scale2 = 0;
// // // var x = 0;
// // // var y = 0;
// // // var x2 = 0;
// // // var y2 = 0;
// // // var drag = false;


// // // img.onload = function () {
// // // 	//Setting dpi for canvas1
// // // 	var dpi = window.devicePixelRatio || 1;
// // // 	canvas.setAttribute('width', canvas.clientWidth * dpi);
// // // 	canvas.setAttribute('height', canvas.clientHeight * dpi);
	
// // // 	//Setting dpi for canvas2
// // // 	var dpi = window.devicePixelRatio || 1;
// // // 	canvas2.setAttribute('width', canvas2.clientWidth * dpi);
// // // 	canvas2.setAttribute('height', canvas2.clientHeight * dpi);
				
	
// // // 	ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);
// // // 	ctx.save();
	
// // // 	ctx2.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);
// // // 	ctx2.save();
	
// // // 	//fitting image to canvas fill
// // // 	scale = Math.max(canvas.clientWidth / img.width, canvas.clientHeight / img.height); //canvas1 scale
// // // 	scale2 = Math.max(canvas2.clientWidth / img.width, canvas2.clientHeight / img.height); //canvas2 scale

// // //     x = (canvas.clientWidth / 2) - (img.width / 2) * scale; //canvas1 x
// // //     y = (canvas.clientHeight / 2) - (img.height / 2) * scale; //canvas1 y

// // // 	x2 = (canvas2.clientWidth / 2) - (img.width / 2) * scale2; //canvas2 x
// // //     y2 = (canvas2.clientHeight / 2) - (img.height / 2) * scale2; //canvas2 y
	
// // //     ctx.drawImage(img, x, y, img.width * scale, img.height * scale);
// // // 	ctx2.drawImage(img, x2, y2, img.width * scale2, img.height * scale2);
	


// function init() {
//     imageObj = new Image();
//     imageObj.onload = function () { ctx.drawImage(imageObj, 0, 0, 500, 500); };
//     // imageObj.src = 'http://127.0.0.1/supertee/pub/media/BlankProduct/forDesign.png';
//     imageObj.src = document.getElementById('currentProductId').src;
//     // imageObj.src = 'http://www.html5canvastutorials.com/demos/assets/darth-vader.jpg';
//     canvas.addEventListener('mousedown', mouseDown, false);
//     canvas.addEventListener('mouseup', mouseUp, false);
//     canvas.addEventListener('mousemove', mouseMove, false);
// }

// function mouseDown(e) {
//     rect.startX = e.pageX - this.offsetLeft;
//     rect.startY = e.pageY - this.offsetTop;
//     drag = true;
// }

// function mouseUp() { drag = false; 
// 	// console.log("width"+rect.w);
// 	var canvasHeight = document.getElementById('canvasHeight');
//         canvasHeight.value = rect.w;
//         var canvasWidth = document.getElementById('canvasWidth');
//         canvasWidth.value = rect.h;
//         var canvasXCdnt = document.getElementById('canvasXCdnt');
//         canvasXCdnt.value = rect.startX;
//         var canvasYCdnt = document.getElementById('canvasYCdnt');
//         canvasYCdnt.value = rect.startY;
// 	}



// // function mouseMove(e) {
// //     if (drag) {
// //         ctx.clearRect(0, 0, 500, 500);
// //         ctx.drawImage(imageObj, 0, 0, 500, 500);
// //         rect.w = (e.pageX - this.offsetLeft) - rect.startX;
// //         rect.h = (e.pageY - this.offsetTop) - rect.startY;
// //         ctx.strokeStyle = 'red';
// //         ctx.strokeRect(rect.startX, rect.startY, rect.w, rect.h);
  
// //     }
// // }
// //
// init();
</script>